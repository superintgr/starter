(musical set theory, integer notations, pitch classes, 12-semitone octave)
(what is the goal here), (the goal is to define an encoding scheme using notes and their interactions in letter forms)
(for a neck supporting 24 fret positions, six strings, an instrument can produce any combination of letters and sequences by permuting over the entire set of possible note combination)

(we start with a precomputed buffer stack containing six fundamental tones for the six roots of unity)
(the buffered tracks will setup the basis for each axis where we have 6 of them)

(i need to define the hierarchical relationships between these concepts), (plasmas, ion-acoustic waves, magnetic field lines, propagation of plasma waves in magnetized field, ionosphere and sampling observables from ground)

(fundamental pipeline for cpu), (bootloader, device and drives, interface and io communication, memory pointers, running processes, scheduled tasks, levels of execution layer, user and system state)
(assuming a memory substrate, there are key-value maps intrinsic to the substrate), (to communicate with mapped services, interface collect query from functional interface on the outer layer), (from outer layer there are valid functions of disjoint variables to instrinsic variables)
(intrinsic variables are parameterised units that are linked to outer levels receptive units which are functions change from events to events), (external connectors send request to specific receptive state which processes the message into query object), (receptive units responsive to query parameters designed into the object attributes encode the information from external state to internal state)
(from internal state a valid pointer will trigger the change associated with data vectors), (data vectors applied to the matrices produce scalar terms), (scalar terms are used to transform the internal state)
(internal state at any time provide mapping to the associated variables which provide lookup functions), (lookup functions will fetch the measurable quantities and store the result in the environment denoting the call associated with the job), (subsequent probe from retreiving the requested information at right object level inducing legitimate internal state will restore the outcome of the measurement and relay backward)
(backward passes will land straight onto the external layer and broadcast the data to the communication media)

(along with a repository that is clonable and descriptions that will be included in the repository providing documentation of the source code, we must include a gate with higher level functionalities), (at the first order phase, the gate will produce propagation graphs which will start with all the intrinsic features of the repository and land on a set of description that are natural language representation of the instrinsic parameters)
(at second order approximation, the natural language description will be the basis with additional parameters fixing the endpoints of the last propagation graph to static local attributes and the landing state will be an interface which contains the set of transformations that the substrate will apply to any queries send in regards to the repository contents), (the repository content is a scope that encompasses all changes made available within the scope of the parameter space that define the cloned repository)
(from the dynamical evolution at second degree transformable planes, all backward steps will (a) retain all of static properties upto constant degree of expression and specified epsilon which determines the permeability of the gradient values accumulated at the top to the lowest level allowable in adjusting any and all parameter components), (find out for each k level how well a set of solution could be derived from lower levels with higher levels of interactions)


(I will create a package (3) and make it clonable with github link), (package (3) contains code that could be cloned into a linux or unix based server and procedurally executed via executables)
(each executable will contain a dictionary specifying substrate configuration and a compute unit could be configured according to the minimum requirements), (when a substrate is prepared with hardware made available and project files loaded into the local memory, the executable will run transformations on that substrate)
(transformation processes are handled by the generic os given the runtime environment has been prepared and produce logging data), (every task repository includes a measurement step which will check the logged entries and determine the runtime schedule)
