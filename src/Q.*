[computational gate]
.. a system that is described an algorithm which performs a fixed set of operations in fixed duration of time
.. also called logic gate

[quantum gate]
.. is a physical process
.. whose laws of motion implements a rule
.. that defines each output qubit
.. in terms of the input qubits.

[transformer]
.. coils, windings, sides
.. transport electrons through field operators
.. number of winding determines the transport ratio
.. balancing, impedence matching, screening ground loops etc. among the utilities

[circuit]
.. define algorithm in terms of qubits, channels, runtime, sequencers, gates, states etc.
.. for each node in the sequences, define compute, measure
.. for each antinode in the bars, define preperation, construction (other)

[coherent]
.. observables at one time is observables for that system at other times
.. time dependent hamiltonian
.. [coherence]
  .. a process is [coherent] if observables at the end of the process are functions only of the observables of the same system at the beginning
  .. inteference phenomena and all quantum computation occur only at in [coherent] systems.

[background]
.. here we setup and configure the first parallel subsystem
.. the subsystem will run in a dedicated server and would be accessible at specific addresses
.. there will be pipeline(s) which the thread will continue indefinitely
.. [pipeline]
  .. stay available for discovery and listen to any changes
  .. [sampler], [buffer], [distribution], [
  .. carry out requested job, stage the recurrent proxesses into active buffer, respond to buffer lookups





[sounddevice]
import sounddevice as sd
import numpy as np
import os

.. sound device has two types of operations
.. .. (1) collecting input stream from the source channels of the device
.. .. (2) playing output stream from the source arrays of the memory

.. we have to select the device and configure the following/
.. .. (input, output) channels
.. .. (sample rate)
.. .. (datatype)

[cli]
.. there are preset programs for io tasks available
.. we can call the script with relevant arguments to execute the functionalities
.. for recording we can specify the output path and memory map the file to the processing node



[continuity]
.. any set of informal statements that could not be computed by my particular system
.. either there are definite network architectures that contains all possible elements
.. or the partial encoding of possible variables that could have one of the other variables
.. any realization that leads to an isolated system is decoherent or rationally coherent.


[streaming from url]
.. sounddevice will stream audio in real time from an url
.. it gathers the stream information from the url
.. it checks that only one stream is available of type audio
.. the gathered information contain channel counts, sampling rate etc.
.. sounddevice opens the output of the stream through ffmpeg and instantiates a raw output stream object (RawOutputStream)
.. before starting playback, it collects a certain number of frames as queued items
.. the offset stored in the buffer eliminates race conditions
.. sounddevice employs the callback function which receives each discarded items from the queue and puts it into the playback queue
.. stream from queue continuously runs in the background for collecting new observables and pushes them into the queue
.. a continously running loop breaks whenever there is a forced termination

[local streamable url]
.. select a directory for publishing playlist
.. 
