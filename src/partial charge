@ pritoms added a flag:
.. flag: this body of text requires translation into the language of superintegers and natives
.. the primary reference to the relavent context is the mid-side processing and encrypting identity mono


.. In atomic physics, a partial charge (or net atomic charge) is a non-integer charge value when measured in elementary charge units. It is represented by the Greek lowercase delta (𝛿), namely 𝛿− or 𝛿+.

Partial charges are created due to the asymmetric distribution of electrons in chemical bonds. For example, in a polar covalent bond like HCl, the shared electron oscillates between the bonded atoms. The resulting partial charges are a property only of zones within the distribution, and not the assemblage as a whole. For example, chemists often choose to look at a small space surrounding the nucleus of an atom: When an electrically neutral atom bonds chemically to another neutral atom that is more electronegative, its electrons are partially drawn away. This leaves the region about that atom's nucleus with a partial positive charge, and it creates a partial negative charge on the atom to which it is bonded.

Polarity of chloromethane (left)
and of the related Grignard compound
with indication of the partial charge.
In such a situation, the distributed charges taken as a group always carries a whole number of elementary charge units. Yet one can point to zones within the assemblage where less than a full charge resides, such as the area around an atom's nucleus. This is possible in part because particles are not like mathematical points—which must be either inside a zone or outside it—but are smeared out by the uncertainty principle of quantum mechanics. Because of this smearing effect, if one defines a sufficiently small zone, a fundamental particle may be both partly inside and partly outside it.



## Azimuth embedding, spherical networks

for line at path in tape point:
    a block where point in tape is emptyk
    a block is not a complete cycle yet
    head = tape(data)
    memory, interference = pointer(tape(head))

    write to disk the tape context
    write to tape the volume context

    block swallow forward


with open(master, line) as port:
    state = port.sample()
    x, y = state * value
    y, z = port(x), -value
    i = y * y.T + x * z




functions = [mu-law encoding/decoding, source text sampler, waveform parser]

- go to any wikipedia page
- sample finite number of bytes
- quantize bytes to tokens
- transform tokens to waveform
- process waveform as noise
- parametrize the amplitude

@ pritoms writing normal:
. when there is a drum track and bassline mixed in a stereo channel, the others can follow the patterns,
. if all tracks are connected to a master with right proportions, a lead channel can be matched to route onto the master as well,
. the function of amplitude then will be the function of the model that master is tracking,
. the function of the output of the master then is the input to all the functions that produce subsequent outputs,
.. information mixed with right proportions to some 2D master array will provide all the necessary inputs to the generating function of the lead track,
.. lead tracker will listen to the master for some pattern, and produce the next output of the master where it is also mixed in,
... memory is of two kinds (.) where they are created or loaded into registers, (..) where they live for long term support,
... the evolution of a program has a memory portion which gradually steps away from the direct line of sight -> peripheral -> construction knowledge -> local truth -> redshift towards gated dumps -> hard drives.

let d be the depth of a network,
the network has 2d - 1 tracks and their side channelsc
let k be the maximum local horizon length,
any exposed part of the network is subjected to the local laws,
let N be the maximum global horizon length.

Memory: <label> <type> <displacement> <mass> <trajectory> <updated>
- named function of node,
- type defined by maximum reference distance from any medium variable,
- displacement is the distance from the computation variable,
- mass denotes the number of possible constructors,
- trajectory is a vector of azimuth angle,
- update reflects the datetime of last azimuth calculation.

